
/**
 * Generates a standardized API response
 * @param {number} statusCode - HTTP status code
 * @param {object|string} body - Response body
 * @param {object} additionalHeaders - Additional headers to include in the response
 * @returns {object} Formatted API Gateway response object
 */
function formatResponse(statusCode, body, additionalHeaders = {}) {
    const baseHeaders = {
        'Content-Type': 'application/json',
        'Access-Control-Allow-Origin': '*',
        'Access-Control-Allow-Credentials': true,
    };

    return {
        statusCode: statusCode,
        headers: { ...baseHeaders, ...additionalHeaders },
        body: JSON.stringify(body)
    };
}

/**
 * Generates a success response
 * @param {object|string} body - Response body
 * @param {number} statusCode - HTTP status code (default: 200)
 * @returns {object} Formatted success response
 */
function successResponse(body, statusCode = 200) {
    return formatResponse(statusCode, body);
}

/**
 * Generates an error response
 * @param {string} message - Error message
 * @param {number} statusCode - HTTP status code (default: 500)
 * @returns {object} Formatted error response
 */
function errorResponse(message, statusCode = 500) {
    return formatResponse(statusCode, { error: message });
}

module.exports = {
    formatResponse,
    successResponse,
    errorResponse
};